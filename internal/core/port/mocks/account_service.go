// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"eagle-bank.com/internal/core/domain/model"
	"eagle-bank.com/internal/core/port"
	"sync"
)

// Ensure, that AccountServiceMock does implement port.AccountService.
// If this is not the case, regenerate this file with moq.
var _ port.AccountService = &AccountServiceMock{}

// AccountServiceMock is a mock implementation of port.AccountService.
//
//	func TestSomethingThatUsesAccountService(t *testing.T) {
//
//		// make and configure a mocked port.AccountService
//		mockedAccountService := &AccountServiceMock{
//			CreateAccountFunc: func(newAccount *model.NewAccount) (*model.UserAccount, error) {
//				panic("mock out the CreateAccount method")
//			},
//		}
//
//		// use mockedAccountService in code that requires port.AccountService
//		// and then make assertions.
//
//	}
type AccountServiceMock struct {
	// CreateAccountFunc mocks the CreateAccount method.
	CreateAccountFunc func(newAccount *model.NewAccount) (*model.UserAccount, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateAccount holds details about calls to the CreateAccount method.
		CreateAccount []struct {
			// NewAccount is the newAccount argument value.
			NewAccount *model.NewAccount
		}
	}
	lockCreateAccount sync.RWMutex
}

// CreateAccount calls CreateAccountFunc.
func (mock *AccountServiceMock) CreateAccount(newAccount *model.NewAccount) (*model.UserAccount, error) {
	if mock.CreateAccountFunc == nil {
		panic("AccountServiceMock.CreateAccountFunc: method is nil but AccountService.CreateAccount was just called")
	}
	callInfo := struct {
		NewAccount *model.NewAccount
	}{
		NewAccount: newAccount,
	}
	mock.lockCreateAccount.Lock()
	mock.calls.CreateAccount = append(mock.calls.CreateAccount, callInfo)
	mock.lockCreateAccount.Unlock()
	return mock.CreateAccountFunc(newAccount)
}

// CreateAccountCalls gets all the calls that were made to CreateAccount.
// Check the length with:
//
//	len(mockedAccountService.CreateAccountCalls())
func (mock *AccountServiceMock) CreateAccountCalls() []struct {
	NewAccount *model.NewAccount
} {
	var calls []struct {
		NewAccount *model.NewAccount
	}
	mock.lockCreateAccount.RLock()
	calls = mock.calls.CreateAccount
	mock.lockCreateAccount.RUnlock()
	return calls
}
